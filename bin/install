#!/usr/bin/env bash

PROJECT_DIR="$( cd "$(dirname "$0")/.." && pwd )"

source "${PROJECT_DIR}/bash/config.sh"

PROJECT_VERSION="${DEFAULT_PROJECT_VERSION}"
PROJECT_DOMAIN="${DEFAULT_PROJECT_DOMAIN}"
ENV_MODE="${DEFAULT_PROJECT_ENV}"
PROJECT_CONFIG_PROD="${DEFAULT_CONFIG_PATH}/${PROJECT_DOMAIN}"

# SET ENV MODE
if [ ! -z ${1} ]; then
    ENV_MODE=${1}
fi

# SET VERSION
if [ ! -z ${2} ]; then
    PROJECT_VERSION=${2}
fi

# SET DOMAIN
if [ ! -z ${3} ]; then
    PROJECT_DOMAIN=${3}
fi

# SET PROD CONFIG PATH PATH
if [ ! -z ${4} ]; then
    PROJECT_CONFIG_PROD="${4}/${PROJECT_DOMAIN}"
fi

source "${PROJECT_DIR}/bash/common.sh"
source "${PROJECT_DIR}/bash/composer.sh"
source "${PROJECT_DIR}/bash/cache.sh"
source "${PROJECT_DIR}/bash/clean.sh"

fix_cache_directories "${PROJECT_DIR}"
copy_database_config "${PROJECT_DIR}" "${PROJECT_CONFIG_PROD}"
clean_composer "${PROJECT_DIR}"
install_composer_dependencies "${PROJECT_DIR}"

pushd "${PROJECT_DIR}" > /dev/null

display_header "Execute install script"
bin/console --color Application/Script/Install --domain=${PROJECT_DOMAIN} --env=${ENV_MODE} --version=${PROJECT_VERSION}
check "Install script errors"

clean_files "${PROJECT_DIR}"
clean_dirs "${PROJECT_DIR}"

popd > /dev/null


